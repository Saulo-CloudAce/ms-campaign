name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Instalar semantic-release e seus plugins dinamicamente
      - name: Install semantic-release plugins
        run: |
          echo "Installing semantic-release and required plugins..."
          npm install -g semantic-release @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/changelog @semantic-release/git

      # Executar semantic-release para determinar versão e gerar release
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Running semantic-release to determine next release..."
          npx semantic-release --branches main --dry-run --debug || true

      # Atualizar versão, gerar changelog, e criar tag
      - name: Generate version, changelog, and tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TYPE=$(npx semantic-release --branches main --dry-run 2>&1 | grep -oE 'patch|minor|major' | head -1)
          echo "Release type determined: $RELEASE_TYPE"

          if [ -n "$RELEASE_TYPE" ]; then
            echo "Generating version and changelog..."
            npx standard-version --release-as $RELEASE_TYPE

            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add package.json CHANGELOG.md
            git commit -m "chore(release): update version"
            git tag "$(jq -r .version package.json)"
            git push origin main --follow-tags
          else
            echo "No changes detected. Skipping release."
          fi
