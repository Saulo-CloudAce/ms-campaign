name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Atualizar versão, criar changelog e tag
      - name: Generate version, changelog, and tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Determinar tipo de versão com semantic-release (dry-run)
          RELEASE_TYPE=$(npx semantic-release --dry-run | grep -oE 'patch|minor|major' | head -1)
          echo "Determined RELEASE_TYPE: $RELEASE_TYPE"

          # Se houver tipo de release válido
          if [ -n "$RELEASE_TYPE" ]; then
            echo "Generating new version and changelog..."

            # Atualiza package.json, gera changelog e cria tag
            npx standard-version --release-as $RELEASE_TYPE

            # Exibe o estado do repositório para debug
            git status

            # Configurar usuário GitHub Actions
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

            # Commitar mudanças
            git add package.json CHANGELOG.md
            git commit -m "chore(release): update version to $(jq -r .version package.json)"

            # Criar tag
            NEW_TAG=$(jq -r .version package.json)
            echo "Creating new tag: $NEW_TAG"
            git tag "$NEW_TAG"

            # Fazer push das mudanças e da tag
            echo "Pushing changes and tags to repository..."
            git push origin main --follow-tags
          else
            echo "No release necessary. Skipping version update."
          fi
